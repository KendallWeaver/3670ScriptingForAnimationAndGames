global proc string[] CreateDomino() {
    polyCube -w 4 -h 10 -d 1 -sx 2 -sy 5 -sz 1 -ax 0 1 0 -cuv 4 -ch 1 -name "Block";
    move -r 0 5 0;
    string $topDots[];
    string $lowerDots[];
    string $sels[];
    string $lowSels[];
    string $selections[];
    int $topNumber = rand (1, 5);
    int $bottomNumber = rand (1, 5);
    //Following If statements are checking how many top numbers there are
    if($topNumber == 1){
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        rotate -r -os -fo 90 0 0 ;
        move -r 0 8 0 ;
        $sels = `ls -selection`;
        $topDots[0] = $sels[0] ;
        print $topDots;
    }
    else if($topNumber == 2){
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $sels = `ls -selection`;
        $topDots[0] = $sels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r -1 9 0 ;
        duplicate -rr;
        $sels = `ls -selection`;
        $topDots[1] = $sels[0] ;
        move -r 2 -2 0 ;
    }
    else if($topNumber == 3){
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $sels = `ls -selection`;
        $topDots[0] = $sels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r -1 9 0 ;
        duplicate -rr;
        $sels = `ls -selection`;
        $topDots[1] = $sels[0] ;
        move -r 2 -2 0 ;
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $sels = `ls -selection`;
        $topDots[2] = $sels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r 0 8 0 ;
    }
    else if($topNumber == 4){
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $sels = `ls -selection`;
        $topDots[0] = $sels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r -1 9 0 ;
        duplicate -rr;
        $sels = `ls -selection`;
        $topDots[1] = $sels[0] ;
        move -r 0 -2 0 ;
        duplicate -rr;
        $sels = `ls -selection`;
        $topDots[2] = $sels[0] ;
        move -r 2 0 0 ;
        duplicate -rr;
        $sels = `ls -selection`;
        $topDots[3] = $sels[0] ;
        move -r 0 2 0 ;
    }
    else if($topNumber == 5){
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $sels = `ls -selection`;
        $topDots[0] = $sels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r -1 9 0 ;
        duplicate -rr;
        $sels = `ls -selection`;
        $topDots[1] = $sels[0] ;
        move -r 0 -2 0 ;
        duplicate -rr;
        $sels = `ls -selection`;
        $topDots[2] = $sels[0] ;
        move -r 2 0 0 ;
        duplicate -rr;
        $sels = `ls -selection`;
        $topDots[3] = $sels[0] ;
        move -r 0 2 0 ;
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $sels = `ls -selection`;
        $topDots[4] = $sels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r 0 8 0 ;
    }
    
    //Following is checking how many Bottom Dots there are
    if($bottomNumber == 1){
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        rotate -r -os -fo 90 0 0 ;
        move -r 0 2 0 ;
        $lowSels = `ls -selection`;
        $lowerDots[0] = $lowSels[0] ;
    }
    else if($bottomNumber == 2){
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $lowSels = `ls -selection`;
        $lowerDots[0] = $lowSels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r -1 3 0 ;
        duplicate -rr;
        $lowSels = `ls -selection`;
        $lowerDots[1] = $lowSels[0] ;
        move -r 2 -2 0 ;
    }
    else if($bottomNumber == 3){
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $lowSels = `ls -selection`;
        $lowerDots[0] = $lowSels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r -1 3 0 ;
        duplicate -rr;
        $lowSels = `ls -selection`;
        $lowerDots[1] = $lowSels[0] ;
        move -r 2 -2 0 ;
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $lowSels = `ls -selection`;
        $lowerDots[2] = $lowSels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r 0 2 0 ;
    }
    else if($bottomNumber == 4){
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $lowSels = `ls -selection`;
        $lowerDots[0] = $lowSels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r -1 3 0 ;
        duplicate -rr;
        $lowSels = `ls -selection`;
        $lowerDots[1] = $lowSels[0] ;
        move -r 0 -2 0 ;
        duplicate -rr;
        $lowSels = `ls -selection`;
        $lowerDots[2] = $lowSels[0] ;
        move -r 2 0 0 ;
        duplicate -rr;
        $lowSels = `ls -selection`;
        $lowerDots[3] = $lowSels[0] ;
        move -r 0 2 0 ;
    }
    else if($bottomNumber == 5){
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $lowSels = `ls -selection`;
        $lowerDots[0] = $lowSels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r -1 3 0 ;
        duplicate -rr;
        $lowSels = `ls -selection`;
        $lowerDots[1] = $lowSels[0] ;
        move -r 0 -2 0 ;
        duplicate -rr;
        $lowSels = `ls -selection`;
        $lowerDots[2] = $lowSels[0] ;
        move -r 2 0 0 ;
        duplicate -rr;
        $lowSels = `ls -selection`;
        $lowerDots[3] = $lowSels[0] ;
        move -r 0 2 0 ;
        polyCylinder -radius .5 -h 1.2 -sx 20 -sy 1 -sz 1 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1;
        $lowSels = `ls -selection`;
        $lowerDots[4] = $lowSels[0] ;
        rotate -r -os -fo 90 0 0 ;
        move -r 0 2 0 ;
    }
    select -clear;
    polyUnite -ch 1 -mergeUVSets 1 -centerPivot -name "Domino" $topDots $lowerDots "Block";
    $selections = `ls -selection`;
    delete -constructionHistory $selections;
    return $selections;
}

CreateDomino();